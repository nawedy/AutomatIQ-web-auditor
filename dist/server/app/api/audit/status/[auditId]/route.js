(()=>{var e={};e.id=1941,e.ids=[1941],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},23069:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>x,routeModule:()=>m,serverHooks:()=>h,workAsyncStorage:()=>f,workUnitAsyncStorage:()=>g});var s={};r.r(s),r.d(s,{DELETE:()=>p,GET:()=>d,POST:()=>c,PUT:()=>l});var o=r(96559),a=r(48088),n=r(37719),i=r(32190),u=r(68043);async function d(e,{params:t}){try{let{auditId:e}=await t;if(!/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(e))return i.NextResponse.json({error:"Invalid audit ID format"},{status:400});await (0,u.Ay)();let r={id:e,status:"completed",progress:100,currentStep:"Audit completed",startTime:new Date(Date.now()-3e4).toISOString(),completedAt:new Date().toISOString(),estimatedTimeRemaining:0,results:{available:!0,seo:{score:85,issues:3},performance:{score:92,issues:1},overall:{score:88}}};return i.NextResponse.json({success:!0,audit:r})}catch(e){return console.error("API Error - Get Audit Status:",e),i.NextResponse.json({error:"Failed to get audit status",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function c(){return i.NextResponse.json({error:"Method not allowed. Use GET to check audit status.",usage:{method:"GET",path:"/api/audit/status/{auditId}",description:"Get the current status and progress of an audit"}},{status:405})}async function l(){return i.NextResponse.json({error:"Method not allowed. Use GET to check audit status.",usage:{method:"GET",path:"/api/audit/status/{auditId}",description:"Get the current status and progress of an audit"}},{status:405})}async function p(e,{params:t}){try{let{auditId:e}=await t;if(!/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(e))return i.NextResponse.json({error:"Invalid audit ID format"},{status:400});return await (0,u.Ay)(),i.NextResponse.json({success:!0,message:"Audit cancelled successfully",auditId:e})}catch(e){return console.error("API Error - Cancel Audit:",e),i.NextResponse.json({error:"Failed to cancel audit",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}let m=new o.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/audit/status/[auditId]/route",pathname:"/api/audit/status/[auditId]",filename:"route",bundlePath:"app/api/audit/status/[auditId]/route"},resolvedPagePath:"/Users/drgn003/AutomatIQ/AI-website-auditor/app/api/audit/status/[auditId]/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:f,workUnitAsyncStorage:g,serverHooks:h}=m;function x(){return(0,n.patchFetch)({workAsyncStorage:f,workUnitAsyncStorage:g})}},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},56037:e=>{"use strict";e.exports=require("mongoose")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},68043:(e,t,r)=>{"use strict";r.d(t,{Ay:()=>i});var s=r(56037),o=r.n(s);let a=process.env.MONGODB_URI||"mongodb://localhost:27017/automatiq-auditor";if(!a)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let n=global.mongoose;n||(n=global.mongoose={conn:null,promise:null});let i=async function(){if(n.conn)return n.conn;n.promise||(n.promise=o().connect(a,{bufferCommands:!1,maxPoolSize:10,serverSelectionTimeoutMS:5e3,socketTimeoutMS:45e3,family:4}).then(e=>(console.log("✅ Connected to MongoDB"),e)).catch(e=>{throw console.error("❌ MongoDB connection error:",e),e}));try{n.conn=await n.promise}catch(e){throw n.promise=null,e}return n.conn}},78335:()=>{},96487:()=>{}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[4243,580],()=>r(23069));module.exports=s})();